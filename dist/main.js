(()=>{var t={653:(t,e,r)=>{const o=r(585),n=()=>{const t=Array(10).fill({hasBeenHit:!1,isShip:!1}).map((()=>Array(10).fill({hasBeenHit:!1,isShip:!1}))),e=[o(5),o(4),o(3),o(3),o(2)],r=(e,r)=>t[e][r],n=(e,r,o,n)=>{const i=n.getLength();if("vertical"===o){if(r+i<=10){for(let o=0;o<i;o+=1)t[e][r+o]=n;return!0}}else if("horizontal"===o&&e+i<=10){for(let o=0;o<i;o+=1)t[e+o][r]=n;return!0}return!1},i=()=>{const t=0===Math.floor(2*Math.random())?"vertical":"horizontal";return{randomColumn:Math.floor(10*Math.random()),randomRow:Math.floor(10*Math.random()),randomDirection:t}};return{getShotLocation:r,receiveAttack:(e,r)=>{t[e][r].hasBeenHit=!0},checkIfAllShipsHaveSunk:()=>t.flat().every((t=>!1===t.isShip||!0===t.isShip&&!0===t.hasBeenHit&&t.getStatus().every((t=>"hit"===t)))),placeShip:n,randomlyPlaceShips:()=>{const t=[];for(let o=0;o<e.length;o+=1){const{randomColumn:a,randomRow:s,randomDirection:l}=i(),h=e[o];!0===r(a,s).isShip||!1===n(a,s,l,h)?o-=1:t.push({randomColumn:a,randomRow:s,randomDirection:l})}return t}}};n().randomlyPlaceShips(),t.exports=n},585:t=>{t.exports=t=>{const e=Array(t).fill("unhit");return{getLength:()=>e.length,isSunk:()=>e.every((t=>"hit"===t)),hit:r=>{r<t&&(e[r]="hit")},getStatus:()=>e,isShip:!0}}}},e={};function r(o){var n=e[o];if(void 0!==n)return n.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,r),i.exports}(()=>{"use strict";const t=r(653);(()=>{const e=document.querySelector("div.player-board"),r=t();r.randomlyPlaceShips();for(let t=0;t<10;t+=1)for(let o=0;o<10;o+=1){const n=document.createElement("div");n.classList.add("cell"),r.getShotLocation(t,o).isShip&&n.classList.add("ship"),e.appendChild(n)}})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
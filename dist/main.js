(()=>{var e={653:(e,t,a)=>{const i=a(585);e.exports=()=>{const e={hasBeenHit:!1,isShip:!1,offLimits:!1};let t=!1;const a=()=>{const t=Array(10).fill().map((()=>Array(10).fill()));for(let a=0;a<10;a+=1)for(let i=0;i<10;i+=1)t[a][i]={...e,column:a,row:i};return t};let l=a();const r=()=>{l=a()},o=(e,t)=>l?.[e]?.[t],c=(t,a,i=(()=>Object.assign(e,{offLimits:!0}))())=>{if(void 0===l?.[t]?.[a])return!0;const r=l[t][a];return l[t][a]={...r,...i},!0},n=(e,t)=>{c(e-1,t-1),c(e,t-1)},h=(e,t,a,i)=>{if("vertical"===a)for(let a=0;a<i;a+=1){const i=o(e,t+a);if(i&&!0===i.isShip&&!0===i.offLimits)return!0}if("horizontal"===a)for(let a=0;a<i;a+=1){const i=o(e+a,t);if(i&&!0===i.isShip&&!0===i.offLimits)return!0}return!1},s=(e,t,a,i)=>{if(l[e][t].isShip||l[e][t].offLimits)return!1;const r=i.getLength();if(h(o(e,t)))return!1;if("vertical"===a){if(((e,t)=>e>=0&&e+t-1<l.length)(t,r)){for(let a=0;a<r;a+=1)c(e,t+a,{...i,position:a}),c(e+1,t+a),c(e-1,t+a);return((e,t,a)=>{n(e,t),c(e,t+a),c(e+1,t+a),c(e-1,t+a),c(e+1,t-1)})(e,t,r),!0}}else if("horizontal"===a&&((e,t)=>e>=0&&e+t-1<l.length)(e,r)){for(let a=0;a<r;a+=1)c(e+a,t,{...i,position:a}),c(e+a,t+1),c(e+a,t-1);return((e,t,a)=>{n(e,t),c(e+a,t),c(e-1,t+1),c(e+a,t+1),c(e+a,t-1),c(e-1,t)})(e,t,r),!0}return!1},p=()=>{const e=0===Math.floor(2*Math.random())?"vertical":"horizontal",t=Math.floor(100*Math.random()),a=(()=>{const e=[...l.flat()];return e.forEach((e=>{!0===e.hasBeenHit?e.availability=!1:e.availability=!0})),e})()[t];return!1===a.availability?p():{elementColumn:a.column,elementRow:a.row,randomDirection:e}},d=e=>{const t=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());let l=Math.round(Math.random());return(0!==l||(l="horizontal",!1!==s(t,a,l,i(e))))&&(1!==l||(l="vertical",!1!==s(t,a,l,i(e))))&&void 0};return{clearBoard:r,checkIfLocationIsAShipOrOffLimits:h,checkIfOffLimitZoneWasCorrectlyImplemented:e=>l.flat().filter((e=>!0===e.offLimits)).length===e+2,getLocation:o,receiveAttack:(e,t)=>{l[e][t].hasBeenHit=!0},checkIfAllShipsHaveSunk:()=>{let e=!0;for(let t=0;t<10;t+=1)for(let a=0;a<10;a+=1){const i=o(t,a);if(!1!==i.isShip&&i.isShip&&!1===i.isSunk()){e=!1;break}}return e},placeShip:s,randomlyPlaceShips:()=>{switch(r(),Math.floor(10*Math.random())){case 0:s(1,1,"horizontal",i(4)),s(1,4,"horizontal",i(4)),s(7,3,"horizontal",i(3)),s(2,7,"horizonal",i(3)),s(6,7,"horizontal",i(2)),s(5,9,"horizontal",i(2)),s(8,1,"vertical",i(1)),s(9,5,"vertical",i(1));break;case 1:s(0,1,"vertical",i(4)),s(8,1,"vertical",i(4)),s(3,1,"horizontal",i(3)),s(0,7,"vertical",i(3)),s(3,6,"horizontal",i(2)),s(8,7,"horizontal",i(2)),s(4,8,"vertical",i(1)),s(6,7,"vertical",i(1));break;case 2:s(0,1,"horizontal",i(4)),s(0,3,"horizontal",i(4)),s(9,1,"vertical",i(3)),s(2,8,"horizontal",i(3)),s(5,3,"vertical",i(2)),s(0,6,"vertical",i(2)),s(1,6,"vertical",i(1)),s(7,4,"vertical",i(1));break;case 3:s(0,0,"vertical",i(4)),s(9,0,"vertical",i(4)),s(0,5,"vertical",i(3)),s(3,1,"vertical",i(3)),s(5,1,"vertical",i(2)),s(7,1,"vertical",i(2)),s(4,7,"vertical",i(1)),s(8,7,"vertical",i(1));break;case 4:s(2,4,"horizontal",i(4)),s(0,6,"vertical",i(4)),s(2,7,"horizontal",i(3)),s(6,6,"horizontal",i(3)),s(7,1,"horizontal",i(2)),s(6,8,"horizontal",i(2)),s(2,1,"horizontal",i(1)),s(4,1,"horizontal",i(1));break;case 5:s(1,3,"horizontal",i(4)),s(6,2,"vertical",i(4)),s(0,6,"vertical",i(3)),s(8,2,"vertical",i(3)),s(0,0,"horizontal",i(2)),s(2,6,"horizontal",i(2)),s(9,6,"vertical",i(1)),s(5,9,"vertical",i(1));break;case 6:s(0,0,"vertical",i(4)),s(0,6,"vertical",i(4)),s(0,2,"horizontal",i(3)),s(6,1,"horizontal",i(3)),s(8,3,"horizontal",i(2)),s(9,5,"vertical",i(2)),s(9,8,"vertical",i(1)),s(7,9,"vertical",i(1));break;case 7:s(0,1,"vertical",i(4)),s(0,6,"vertical",i(4)),s(2,0,"horizontal",i(3)),s(6,0,"horizontal",i(3)),s(9,2,"vertical",i(2)),s(9,6,"vertical",i(2)),s(9,9,"vertical",i(1)),s(7,9,"vertical",i(1));break;case 8:s(2,0,"vertical",i(4)),s(7,1,"vertical",i(4)),s(2,5,"horizontal",i(3)),s(6,7,"vertical",i(3)),s(1,9,"horizontal",i(2)),s(2,7,"horizontal",i(2)),s(9,6,"vertical",i(1)),s(8,9,"vertical",i(1));break;case 9:s(0,0,"horizontal",i(4)),s(5,2,"vertical",i(1)),s(2,6,"vertical",i(1)),s(0,8,"horizontal",i(3)),s(4,5,"vertical",i(4)),s(7,4,"horizontal",i(2)),s(6,6,"horizontal",i(2)),s(7,8,"horizontal",i(3))}},makeRandomCoordinates:p,checkIfBoardHasBeenFullyPopulated:()=>{const e=l.flat();let t=0;return e.forEach((e=>{e.isShip&&(t+=1)})),20===t},randomFleet:()=>{for(let e=0;e<2;)!1!==d(1)&&(e+=1);for(let e=0;e<2;)!1!==d(2)&&(e+=1);for(let e=0;e<2;)!1!==d(3)&&(e+=1);for(let e=0;e<2;)!1!==d(4)&&(e+=1);t=!0},gameBoard:l,isStartAllowed:{get:()=>t,set(e){t=e}}}}},61:e=>{e.exports=(e="player")=>({getName:()=>e,attack:(e,t,{getLocation:a,receiveAttack:i})=>{const l=a(e,t);return!1===l.hasBeenHit||l.isShip&&!1===l.getStatus().includes("unhit")?(i(e,t),l.hit?(l.hit(l.position),"You hit a ship!"):"It's a hit!"):"You have already hit this spot!"},randomPos:()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())]})},585:e=>{e.exports=(e,t="ship")=>{const a=Array(e).fill("unhit");return{getName:()=>t,getLength:()=>a.length,isSunk:()=>a.every((e=>"hit"===e)),hit:t=>{t<e&&(a[t]="hit")},getStatus:()=>a,domTargets:[],hasBeenHit:!1,offLimits:!0,isShip:!0}}}},t={};function a(i){var l=t[i];if(void 0!==l)return l.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,a),r.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var i in t)a.o(t,i)&&!a.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=a(585),t=a.n(e);let i,l=!1,r=!1,o=[],c=[],n=[],h=[];function s(e){return"left"===e?(i="left",[o[0],o[1]-1]):"right"===e?(i="right",[o[0],o[1]+1]):"down"===e?(i="down",[o[0]+1,o[1]]):"up"===e?(i="up",[o[0]-1,o[1]]):void 0}function p(e,t,a,i){l=e,void 0!==t&&(r=t),void 0!==a&&(o=[a,i]),0===c.length&&void 0!==a?c=[a,i]:0!==c.length&&0===n.length&&void 0!==a&&(n=[a,i])}function d(e,t){return h=[],0!==t&&h.push([e,t-1]),9!==t&&h.push([e,t+1]),0!==e&&h.push([e-1,t]),9!==e&&h.push([e+1,t]),h}function u(e,t,a,p,u,v){let S;if(!0===p&&(o=[],c=[],n=[],h=[],l=!1,r=!1,i=""),!r&&!l)return S=t.randomPos(),z(t,a,S[0],S[1],u,v);if(0!==n.length&&l&&!e){let e;if(c[0]===n[0]-1&&(e=s("down")),c[0]===n[0]+1&&(e=s("up")),c[1]===n[1]-1&&(e=s("right")),c[1]===n[1]+1&&(e=s("left")),e[0]>=0&&e[0]<=9&&e[1]>=0&&e[1]<=9)return z(t,a,e[0],e[1],u,v)}else if(0!==n.length&&r&&!l){let e;if(o=c,n=[],"up"===i&&(e=s("down")),"down"===i&&(e=s("up")),"right"===i&&(e=s("left")),"left"===i&&(e=s("right")),e[0]>=0&&e[0]<=9&&e[1]>=0&&e[1]<=9)return z(t,a,e[0],e[1],u,v)}else if(r){0===h.length&&d(o[0],o[1]),0===h.length&&!0===r&&d(c[0],c[1]);const e=h.pop();return z(t,a,e[0],e[1],u,v)}}let v=0;function S(e,a){let i=2;const l=document.querySelector(e),r=document.querySelector("body"),o=document.querySelectorAll(".player-board > .cell"),c=l.childNodes;let n,h,s="horizontal";c[0]&&c[0].addEventListener("mouseenter",(()=>h=0)),c[1]&&c[1].addEventListener("mouseenter",(()=>h=-1)),c[2]&&c[2].addEventListener("mouseenter",(()=>h=-2)),c[3]&&c[3].addEventListener("mouseenter",(()=>h=-3)),l.addEventListener("click",(e=>function(e){"horizontal"===s?(s="vertical",e.target.parentNode.classList.toggle("rotated")):(s="horizontal",e.target.parentNode.classList.toggle("rotated"))}(e))),l.addEventListener("dragstart",(()=>{for(let e=0;e<10;e+=1)a.gameBoard[e].forEach((e=>{(e.offLimits||e.isShip)&&document.querySelector(`.player-board > .cell[column='${e.column}'][row='${e.row}']`).classList.toggle("not-available")}))})),l.addEventListener("dragend",(()=>{if(document.querySelectorAll(".not-available").forEach((e=>e.classList.remove("not-available"))),-1===n)return;let r,o,c=`${n}`;n<10?(r=0,o=n):(c=c.split(""),r=1*c[0],o=1*c[1]),"horizontal"===s&&(o+=h),"vertical"===s&&(r+=h),o<0||".ship-1"===e&&!1===a.placeShip(o,r,s,t()(1))||".ship-2"===e&&!1===a.placeShip(o,r,s,t()(2))||".ship-3"===e&&!1===a.placeShip(o,r,s,t()(3))||".ship-4"===e&&!1===a.placeShip(o,r,s,t()(4))||(y(a),i-=1,v+=1,8===v&&a.isStartAllowed.set(!0),l.parentNode.firstChild.textContent=`${i}x`,0===i&&(l.parentNode.style.display="none"),!a.checkIfBoardHasBeenFullyPopulated())||(document.querySelector("body > main > div.player > div:nth-child(4)").style.display="none",document.querySelector(".randomize").style.display="none",a.isStartAllowed.set(!0))})),o.forEach(((e,t)=>{e.addEventListener("dragover",(e=>{e.preventDefault(),n=t}))})),r.addEventListener("dragenter",(()=>{n=-1}))}function f(e){return new Promise((t=>{setTimeout((()=>{t(2)}),e)}))}const m=(e,t)=>{if(e.checkIfAllShipsHaveSunk()){const e=document.querySelector(".modal"),t=document.querySelector(".modal-content > p"),a=document.querySelector(".modal-content > button");e.style.display="block",a.addEventListener("click",(()=>{location.reload()})),t.textContent="You lose!"}if(t.checkIfAllShipsHaveSunk()){const e=document.querySelector(".modal"),t=document.querySelector(".modal-content > p"),a=document.querySelector(".modal-content > button");e.style.display="block",t.textContent="You win!",a.addEventListener("click",(()=>{location.reload()}))}};async function z(e,t,a,i,l,r){let o=!1;const c=document.querySelector(`.player-board > .cell[column='${a}'][row='${i}']`),n=t.attack(a,i,l);if("You have already hit this spot!"===n&&u(!0,e,t,void 0,l,r),"It's a hit!"===n&&(p(!1),c.classList.add("miss")),"You hit a ship!"===n)return p(!0,!0,a,i),c.classList.add("hit"),l.getLocation(a,i).domTargets.push(c),l.getLocation(a,i).isSunk()&&(l.getLocation(a,i).domTargets.forEach((e=>e.classList.add("sunk"))),o=!0,!0===l.checkIfAllShipsHaveSunk())?m(l,r):(await f(1e3),u(!1,e,t,o,l,r))}const y=({getLocation:e})=>{const t=document.querySelector("div.player-board");for(let a=0;a<10;a+=1)for(let i=0;i<10;i+=1){const l=t.querySelector(`.cell:nth-child(${10*i+a+1})`);l.setAttribute("column",a),l.setAttribute("row",i);const r=e(a,i);r.isShip&&(l.classList.add("ship"),l.setAttribute("ship-name",r.getName()))}},g=e=>{switch(e.clearBoard(),document.querySelectorAll(".player-board > .cell").forEach((e=>{e.classList.remove("ship"),e.classList.remove("hit"),e.classList.remove("miss")})),Math.floor(10*Math.random())){case 0:e.placeShip(1,1,"horizontal",t()(4)),e.placeShip(1,4,"horizontal",t()(4)),e.placeShip(7,3,"horizontal",t()(3)),e.placeShip(2,7,"horizonal",t()(3)),e.placeShip(6,7,"horizontal",t()(2)),e.placeShip(5,9,"horizontal",t()(2)),e.placeShip(8,1,"vertical",t()(1)),e.placeShip(9,5,"vertical",t()(1));break;case 1:e.placeShip(0,1,"vertical",t()(4)),e.placeShip(8,1,"vertical",t()(4)),e.placeShip(3,1,"horizontal",t()(3)),e.placeShip(0,7,"vertical",t()(3)),e.placeShip(3,6,"horizontal",t()(2)),e.placeShip(8,7,"horizontal",t()(2)),e.placeShip(4,8,"vertical",t()(1)),e.placeShip(6,7,"vertical",t()(1));break;case 2:e.placeShip(0,1,"horizontal",t()(4)),e.placeShip(0,3,"horizontal",t()(4)),e.placeShip(9,1,"vertical",t()(3)),e.placeShip(2,8,"horizontal",t()(3)),e.placeShip(5,3,"vertical",t()(2)),e.placeShip(0,6,"vertical",t()(2)),e.placeShip(1,6,"vertical",t()(1)),e.placeShip(7,4,"vertical",t()(1));break;case 3:e.placeShip(0,0,"vertical",t()(4)),e.placeShip(9,0,"vertical",t()(4)),e.placeShip(0,5,"vertical",t()(3)),e.placeShip(3,1,"vertical",t()(3)),e.placeShip(5,1,"vertical",t()(2)),e.placeShip(7,1,"vertical",t()(2)),e.placeShip(4,7,"vertical",t()(1)),e.placeShip(8,7,"vertical",t()(1));break;case 4:e.placeShip(2,4,"horizontal",t()(4)),e.placeShip(0,6,"vertical",t()(4)),e.placeShip(2,7,"horizontal",t()(3)),e.placeShip(6,6,"horizontal",t()(3)),e.placeShip(7,1,"horizontal",t()(2)),e.placeShip(6,8,"horizontal",t()(2)),e.placeShip(2,1,"horizontal",t()(1)),e.placeShip(4,1,"horizontal",t()(1));break;case 5:e.placeShip(1,3,"horizontal",t()(4)),e.placeShip(6,2,"vertical",t()(4)),e.placeShip(0,6,"vertical",t()(3)),e.placeShip(8,2,"vertical",t()(3)),e.placeShip(0,0,"horizontal",t()(2)),e.placeShip(2,6,"horizontal",t()(2)),e.placeShip(9,6,"vertical",t()(1)),e.placeShip(5,9,"vertical",t()(1));break;case 6:e.placeShip(0,0,"vertical",t()(4)),e.placeShip(0,6,"vertical",t()(4)),e.placeShip(2,2,"horizontal",t()(3)),e.placeShip(6,1,"horizontal",t()(3)),e.placeShip(8,3,"horizontal",t()(2)),e.placeShip(9,5,"vertical",t()(2)),e.placeShip(9,8,"vertical",t()(1)),e.placeShip(7,9,"vertical",t()(1));break;case 7:e.placeShip(0,1,"vertical",t()(4)),e.placeShip(0,6,"vertical",t()(4)),e.placeShip(2,0,"horizontal",t()(3)),e.placeShip(6,0,"horizontal",t()(3)),e.placeShip(9,2,"vertical",t()(2)),e.placeShip(9,6,"vertical",t()(2)),e.placeShip(9,9,"vertical",t()(1)),e.placeShip(7,9,"vertical",t()(1));break;case 8:e.placeShip(2,0,"vertical",t()(4)),e.placeShip(7,1,"vertical",t()(4)),e.placeShip(2,5,"horizontal",t()(3)),e.placeShip(6,7,"vertical",t()(3)),e.placeShip(1,9,"horizontal",t()(2)),e.placeShip(2,7,"horizontal",t()(2)),e.placeShip(9,6,"vertical",t()(1)),e.placeShip(8,9,"vertical",t()(1));break;case 9:e.placeShip(0,0,"horizontal",t()(4)),e.placeShip(5,2,"vertical",t()(1)),e.placeShip(2,6,"vertical",t()(1)),e.placeShip(0,8,"horizontal",t()(3)),e.placeShip(4,5,"vertical",t()(4)),e.placeShip(7,4,"horizontal",t()(2)),e.placeShip(6,6,"horizontal",t()(2)),e.placeShip(7,8,"horizontal",t()(3))}};var b=a(653),L=a.n(b),k=a(61),A=a.n(k);const w=L()(),E=L()(),q=A()(),M=A()();!function(e){document.querySelector("button.randomize").addEventListener("click",(()=>{location.reload(),g(e)})),g(e),document.querySelector("button.reset").addEventListener("click",(()=>{location.reload()}))}(w),function(e){function t(e,t){const a=document.querySelector("body > main > div.player > div:nth-child(4)"),i=document.createElement("div");i.classList.add("ship-container"),a.appendChild(i);const l=document.createElement("span");l.classList.add(`info-${e}`),l.textContent="2x",i.appendChild(l);const r=document.createElement("div");r.classList.add("ship"),r.classList.add(`ship-${e}`),r.setAttribute("draggable","true"),i.appendChild(r);for(let e=0;e<t;e+=1){const e=document.createElement("div");e.classList.add("cell"),r.appendChild(e)}}t(1,1),t(2,2),t(3,3),t(4,4);for(let t=1;t<5;t+=1)S(`.ship-${t}`,e)}(w),g(E);const B=(()=>{const e={};return{publish:function(t,a){Array.isArray(e[t])&&e[t].forEach((e=>{e(a)}))},subscribe:function t(a,i){Array.isArray(t[a])||(e[a]=[]),e[a].push(i);const l=e[a].length-1;return{unsubscribe(){e[a].splice(l,1)}}}}})();((e,t,a,i,l)=>{const r=document.querySelector("div.enemy-board");for(let o=0;o<10;o+=1)for(let c=0;c<10;c+=1){const n=r.querySelector(`.cell:nth-child(${10*c+o+1})`);n.setAttribute("column",o),n.setAttribute("row",c),n.addEventListener("click",(()=>{!1!==e.isStartAllowed.get()&&l.publish("click",{column:o,row:c,playerBoard:e,enemyBoard:t,player:a,enemy:i})}),{once:!0})}})(w,E,q,M,B),B.subscribe("click",(({column:e,row:t,playerBoard:a,enemyBoard:i,player:l,enemy:r})=>{(async(e,t,a,i,l,r)=>{((e,t,a,i)=>{i.attack(e,t,a)})(e,t,a,l),((e,t,a,i)=>{const l=document.querySelector(`.enemy-board > .cell[column='${t}'][row='${a}']`);i.getLocation(t,a)?.isShip&&(i.getLocation(t,a).domTargets.push(l),i.getLocation(t,a).isSunk()&&i.getLocation(t,a).domTargets.forEach((e=>e.classList.add("sunk")))),i.getLocation(t,a).isShip?l.classList.add("hit"):l.classList.add("miss")})(0,e,t,a),await f(700),a.checkIfAllShipsHaveSunk()?m(i,a):u(!1,l,r,void 0,i,a)})(e,t,i,a,l,r)})),y(w)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,